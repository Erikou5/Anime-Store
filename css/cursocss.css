/*podes bajar de google fonts copiando sin style y pegando en la primera linea*/

/* haciendo esto con * afecta a toda la pagina, sacandole los bordes etc, pero se puede usar para todo estos parametros*/
*{
    margin: 0;             /* espacio desde el elemento hacia afuera (margenes)*/
    padding: 0;            /*espacio desde el borde hacia adentro (espacio entre contenido y bordes del contenedor) agranda la caja*/
    box-sizing: border-box;
}


display:none;   /*hace que desaparezca y ahorra el espacio del elemento*/
visibility:hidden;


/* header */

header{
    background-color: blueviolet;
    position: sticky;
    top: 0;       /*indico donde arranca el sticky, hace que te siga*/
    display: flex;             /*FLEXBOX*/
}


header nav ul {
display: inline-block;       /*hace que los bloques se pongan en linea*/
margin: 10px 5px 10px 5px ;        /* podes declarar cada medida empezando desde arriba, derecha, abajo, izq o hay 
                                    o hay valores de margin para cada lado o si lo dejas 1 solo valor es igual a todos
                                    si pongo solo dos ej 10px 15px el primero es para arriba y abajo y el otro izq y derecha*/
list-style: none;     /* le saca los puntitos al lado de la lista*/

}

h1{
    color:red;
    font-size: 40px;  /*px es pixeles*/
    font-family: Arial, Helvetica, sans-serif;  /*tipo de fuente de letra */
    font-weight: ;  /*grosor*/
    font-style: italic ; /*modificar estilo de la letra, cursiva, etc*/
    text-align: center;   /*centrar texto o poner en el lugar q quiera todo en ingles*/
    text-decoration: none;      /*generalmente para sacarle la linea de abajo a los enlaces*/
    border-radius: 8px;         /*bordea los contornos,sirve para por ej botones con color de fondo*/
}


/*main*/

.fixed {                                      /*seria la imagen que te siga por ejemplo cn el logo de wasap*/
    position: fixed;
    right: 50px;
    bottom: 50px;
}

/*footer*/

footer div h2 {

}

/*por ejemplo si quiero buscar un h especifico que quiera alterar y q no afecte a todos*/

.hero h2 {
    background-image: url(../img/);
    background: linear-gradient(rgba(0, 0, 0, 0.426),rgba(0, 0, 0, 0.665)), url(../img); /*aca seria medio un filtro de color en gradiente de un lado al otro*/
    background-position: center;
    background-repeat: no-repeat; /*para evitar el mosaico*/
    background-size: cover;  /*que envez de repetir la imagen en mosaico, se expanda a todo el espacio disponible*/
    background-attachment: fixed; /*hacer q la imagen se mantenga fija mientras scrolleas*/

}  
/*con . y el nombre de la clase llamo a eso en especifico
o se puede llamar id envez de clases con el # pero no es recomendado porque es unico y no puede abarcar varios como la clase*/

/*jerarquias : etiqueta<clase<id<style in line */


img{
    width: 100px ;      /*altura y ancho de imagenes tambien se puede hacer con porcentaje de viewport con vh o vw o directamente % qe depende del contenedor*/
    height: 100px;
    display: block;         /*hago que sea en bloque envez de linea si quiero, pero generalmente se usa flexbox */
}

  display: inline-block;   /*hago en linea lo q sea en bloque*/
/*si a un contenedor no le declaro la altura va a tener el tamaño de su contenido */


/*PONER TEXTO EN IMAGENES*/

div{
    position: relative;         /* se usa para en las div que hay imagenes que quiero sobreposicionar texto ponerles esta propiedad y despues
                                     otra posicion al texto*/
}

div h2{
    position: absolute;
    bottom: 0;            /* hago que aparezca desde el punto 0 desde abajo de la imagen*/

}







/*-----------FLEXBOX----(unidimensional)-----*/                     /*siempre se aplica al elemeno padre*/

Ejemplo padre{
    display: flex;                 /*te los pasa directamente todos a en linea envez de vertical*/
    flex-direction: column;           /* te mantiene todos en columna como antes de aplicar flex o cualquier disposicion que queiras */
    justify-content:space-around ;           /*distribuye en el eje en el que este trabajando (puedo elegir la opcion q quiera puse una random)*/
    justify-content: space-between;          /*me tira un elemento apra cada esquina y los del medio los centra*/
    justify-content: space-evenly;            /*espacio igual entre todos los elementos*/ /*tambien puedo usar start o end uno es al comienzo y otro al final del eje*/
    align-items: center ;           /*distribuye en el eje contrario al que estamos trabajando, tambien esta flex-start y flex-end, arriba o abajo seria*/
    /*el eje de align y jistify dependen de lo q eleji en flex direction*/
    flex-wrap: wrap;        /*usar en contenedores de tarjets de producto, etc para que se adapte al achicarse la pantalla*/
}

Ejemplo hijo{
    order: 1 ( o 3,4,5 etc);      /*propiedad de flexbox que se aplica directamente al hijo no al padre, cambia le orden de los elementos*/
              /* el order de los que no asignas estan en 0 y siempre se ordenan de menor a mayor, se puede usar numeros en neg -1*/
    align-self:  ;       /*es un align item pero se usa para el/los que necesito*/
}


/*---------------GRIDS------(bidimensional, sirve para hacer filas y columnas)------*/           /*siempre se aplica al elemeno padre*/

Ejemplo padre{
    display: grid;
    grid-template-rows: 200px 200px 200px ;                /* Declaro filas, vas poniendo los px que queres que mida cada fila (alto)*/
    grid-auto-rows: 200px;                       /*hace que todas las filas midan lo que le declaro y me crea las filas depende los elementos que tenga, 
                                                sirve para cuando modifico la grilla y se me crean nuevas filas que midan lo mismo*/
    grid-template-columns: 1fr 1fr 1fr ;                   /*Declaro columnas (ancho) podes usar la medida que quieras*/
                                                      /* fr seria fraccion la pantalla, se usa solo para grillas, dividir en 3 seria como hacerlo a 33,3% o 3 de "auto"*/
    grid-template-columns: repeat(2,1fr) 2fr;              /* repeat (*numero de columnas*,*tamaño de cada una si son iguales*), *ya sigo como siempre* */
                                                            /*seria como hacer un 1fr,1fr,2fr*/
    gap: ;                             
    column-gap: ;                        /*seria como el margin pero de grid, en general o para filas o columnas*/
    row-gap: ;  

}                   

Ejemplo hijo{
    grid-column-start: 1 ;              /*indico desde que linea empieza*/      /*se usa para expander secciones de la grilla*/
    grid-column-end: 3 ;                   /*indico hasta que linea termina*/
    grid-column: 1/3;                  /* asi lo hago todo en un solo comando*/
    grid-row: ;                     /*lo mismo pero con las filas, tmb existe start o end pero uso el shortcut y fue*/
    grid-row: 1/ span 2;          /*con SPAN le indico la cantidad de lugares que quiero que se espanda, sin contar las lineas,
                                    /*pero tengo que indicarle si o si desde donde comienza*/
}

/* Ejemplo grids con template areas */       la mejor forma, olvidate de lo de arriba de espandir los hijos

.regisGrids{
    display: grid;
    justify-content: center;
    grid-auto-rows: auto;
    grid-template-columns: 1fr 2fr 0.5fr;
    grid-template-areas:
    "nombre usuario pref"              /*hago un esquema con las palabras de las filas y columnas*/
    "nombre direccion pref"
    "none direccion boton" ;
}
.nombreYapellido{
    grid-area: nombre;         /*le doy el nombre*/
}
.usuarioYpass{
    grid-area: usuario;
}
.direccionEnv{
    grid-area: direccion;
}
.pref{
    grid-area: pref;
}
.registro{
    grid-area: boton;
}


/* ------------ MEDIA QUERY ------------ */

@media screen and (min-whidth:700px) {         /*para tablets 700px/ notebook 900px*/ /*esto es cuando empezas diseñando para cel y vas agrandando*/
    /* todo lo q pongas aca adentro com osi fuera el 
    css normal afecta a la pantalla luego de los pix de ancho asignados
} */


@media screen and (max-whidth:700px){   /*los cambios se van a afectar a partir que es menos del ancho asignado*/

}
@media screen (max-whidth:700px) and (min-whidth:400px) {           /*seria desde un desde y hasta*/

}

@media print{
    /* es para designar caracteristicas para cuando se hace impresion de pantalla */
}

@media (orientation:landscape){
    /* es para trabajar cuando se voltea la pantalla en los cel, solo si diseñas lago solo para celular */
    /* con medidas definidas */
}


display:none;   /*hace que desaparezca y ahorra el espacio del elemento*/
visibility:hidden;


/*----------------ANIMACIONES TRANSICION ETC-------------*/

/*---HOVER---*/        /*Hace que cuando pasas el maus por encima de algun elemento ocurra algo */

/* TRANSICION:   */
transition{                 /*las condiciones de transicion van en el contendor y no en el hover*/
    transition-property: width;        /*aca pongo lo que voy a modificar si son muchas le pongo "all" en este caso width*/
    transition-duration: 2s;        /*el tiempo que va a tomar el cambio*/
    transition-timing-function: ;      /*defino la velocidad, realentamiento o lo que quiera que pase en ese tiempo que le asigne a la transicion*/
    /* ease= lento al final, ease-in= lento al comienzo, ease-out= rapido y frena al final
    ease-in-out= frena,acelera y frena, o usar steps(X) que seria en fragmentos que yo elija */
    transition-delay: ;         /*delay antes de que empiece la transicion*/
    transition: width, 2s, ease, 4ms;         /*aca podes resumir todo lo anterior pero primero siempre va el duration y dsp el delay*/
}


transition:hover{                      /*pongo lo que queiro aplicar y :hover y adentro lo que quiero aplicar*/
    width: 400px;
}

/* TRANSLATE/TRANSFORM:     */

translate{                    /* siempre acompañado de valores de transition para q sea sutil*/
    transition: 2s;               ej de la transicion
}

translate:hover{
    transform: translateX (400px);
    transform: translateY (400px);
    transform: translate (200px,200px);            /*asi seria el primero x y el segundo y */
    transform: scale (2);                   /*lo hace crecer en escala, el default es 1, podes poner 1.5 si queres etc*/
}

/* ROTATE:       */                    

rotate{                    /* siempre con transicion*/
    transition: 2s;              
}

rotate:hover{                         /*adentro va los grados que quiero rotar en deg por ej 180/360deg*/
    transform: rotateX('angle')            gira hacia los lados
    transform: rotateY('angle')            gira para "atras" 
    transform: rotateZ('angle')            gira alrededor
}

/* ANIMATION:          */     sino esta en un hover se va a iniciar la animacion cuando se recarga la pag


.            /* todo esto si quiero q sea con hover va adentro del hover no en el padre como en este ejemplo*/
.tituloAnimado{       
    animation-name: slidein;                    /* le damos un nombre a la animacion  */
    animation-duration: 3s;                  /* esta y la q sigue es cmo la transicion*/
    animation-timing-function: ease;
    animation-direction: forwards;          /*define que pasa con el objeto luego de la animacion, vuelve donde estaba o etc*/
    animation-delay: 1s ;
    animation-iteration-count: infinite;       /*cuantas veces queremos q se repita la animacion*/
    animation: 3s ease initial 1s infinite;  /*aca podes resumir todo asi cmo en transicion, con la misma regla de priemro duracion yd sp delay*/
}

/* 1ra forma: */

@keyframes slidein {         /*asi se controla que sucedera en la animacion llamando al nombre que le dimos*/

    /* desde (propiedades iniciales) */
    from{
        margin-left: 100%;                     asi estaria fuera de la pantalla y luego entra
    }
    /*hasta (como termina) */
    to{
        margin-left: 0;
    }
}

/* 2da forma:  */

@keyframes slidein {
    0%{                  /* asi decidimos que pasa en cada momento de la duracion de la animacion usando % */

    }
    25%{

    }
    50{

    }
    75%{

    }
    100%{

    }
}


/* PSEUDOCLASE Y PSEUDOELEMENTO----------------- */

/* pseudoclase : cuando se posiciona sobre el elemento el maus (:hover) ej */

enlace:visited{         podes cambiar el color q queda despues q tocas un link o propiedades
}
boton:active{        mientras mantenga clickeado un elemento sucede algo
}

input:focus{          le sacas los bordes antes con outline:none y con esto podes hacer q cuando apretas una casilla de imput por ej ponerle un borde de colores
border: blue ;
border-radius:5px ;
}

.cajas div:ntn-child(3){     puedo definir caracteristicas para elementos hijos sin necesidad de darle clases
}                           /*en el () puedo poner even para q sean los pares o odd para impar*/
                            /* si podes 5n escada 5 por ej */


/* pseudoelemento : cambio cuando el usuario interactua (::first-line) ej */

p::first-line{      primera linea de un texto 
}
h2::first-letter{    afecta la primera letra
}
p::selection{         cambios sobre cuando remarcas un texto q se pone azul x default
}
h2::after{ 
    content: ":$";            hace que despues de un texto x ejemplo agregar un emoticono o img con una url
}
h1::before{                alrevez q after          (se pueden convinar con hover para q quede algo mejor)
}